geom_boxplot()
ggplot(track, aes(y=timeSecs, x = sex)) +
geom_boxplot()
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_boxplot()
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point()
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5)
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)")
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)")
summ(lmer_mod13, r.squared = F, re.variance = "var", digits =4, pvals =T)
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5)
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1], slope = mod13$coefficients$random$country2[,2]) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
ggtitle("Random Intercepts of Countries and Random Slopes for Distance by Country")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1], slope = mod13$coefficients$random$country2[,2]) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1], slope = mod13$coefficients$random$country2[,2], alpha=0.4) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances")
lmer_mod13
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.4) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.4) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.4) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.4) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)")
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5)
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5)
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5) +
labs(title = "Distance vs Time",
subtitle = "Interaction between Sex and Distance",
color = "Sex",
x = "Distance of Event",
y = "Time (Seconds)")
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs BMI",
subtitle = "Faceted by")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs GD",
subtitle = "Faceted by")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
labs(title = "Time vs BMI",
subtitle = "Faceted by")
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
labs(title = "Time vs BMI",
subtitle = "Faceted by")
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita")
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom")
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5) +
labs(title = "Distance vs Time",
subtitle = "Interaction between Sex and Distance",
color = "Sex",
x = "Distance of Event",
y = "Time (Seconds)") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2")
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5) +
labs(title = "Distance vs Time",
subtitle = "Interaction between Sex and Distance",
color = "Sex",
x = "Distance of Event",
y = "Time (Seconds)") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
scale_color_brewer("Dark2") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal()
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)") +
ggsave("plot1.png")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)") +
theme_minimal()
ggsave("plot1.png")
ggplot(data = track, aes(x=dist100, y=timeSecs)) +
geom_abline(intercept = mod13$coefficients$random$country2[,1],
slope = mod13$coefficients$random$country2[,2],
alpha=0.3) +
scale_x_continuous(limits = c(0, 9900)) +
scale_y_continuous(limits = c(-500, 500)) +
labs(title = "Random Intercepts and Random Slopes",
subtitle = "For Countries and Event Distances",
x = "Distance of Event",
y = "Time (Seconds)") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal() +
ggsave("plot2.png")
ggplot(track, aes(y=timeSecs, x=dist, color = country2)) +
geom_point(size = 0.5, position = "Jitter", show.legend = F) +
geom_smooth(show.legend=F, se=F, size = 0.3, method = "lm") +
labs(title = "Time in Seconds vs. Distance of Event",
subtitle = "Grouped by Country of Athlete",
y = "Time (Seconds)",
x = "Distance of Event (Meters)") +
theme_minimal() +
ggsave("plot2.png")
summ(lmer_mod13, r.squared = F, re.variance = "var", digits =2, pvals =T)
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal() +
ggsave("plot3.png")
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
track <- track %>% mutate(
longdist = case_when(dist == 100 ~ "short",
dist == 200 ~ "short",
dist == 400 ~ "short",
dist == 800 ~ "short",
dist == 1500 ~ "short",
TRUE ~ "long") %>% as.factor())
ggplot(track, aes(y=timeSecs, x = dist, color = gdpPerCap_)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", se=F, size = 0.5) +
facet_wrap(~longdist, ncol=1, scales = "free") +
labs(title = "Time vs Distance",
subtitle = "Interaction between Distance and GDP per Capita",
x = "Distance of Event",
y = "Time (Seconds)",
color = "GDP per Capita") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
ggplot(track, aes(y=timeSecs, x = dist, color = sex)) +
geom_point(size = 0.5) +
geom_smooth(method = 'lm', size = 0.5) +
labs(title = "Distance vs Time",
subtitle = "Interaction between Sex and Distance",
color = "Sex",
x = "Distance of Event",
y = "Time (Seconds)") +
theme(legend.position = "bottom") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
mod12 <- lme(data = track,
fixed = timeSecs ~ dist100 + c_BMI + c_BMI*dist100 + year1896 + sex + sex*dist100 + gdp_ + gdp_*dist100,
random = ~ dist100|country2)
lmer_mod12 <- lmer(data = track,
timeSecs ~ dist100 + c_BMI + c_BMI*dist100 + year1896 + sex + sex*dist100 + gdp_ + gdp_*dist100 + (dist100|country2))
summ(lmer_mod12, r.squared = F, re.variance = "var")
